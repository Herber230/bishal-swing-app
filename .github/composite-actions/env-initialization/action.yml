name: 'Environment Initialization'
description: 'Initialize the environment for the build. This consider the NodeJS and PNPM versions and their cache.'
inputs:
  node-version:
    description: 'Version for NodeJS'
    required: false
    default: '22.4.0'
  pnpm-version:
    description: 'Version for PNPM'
    required: false
    default: '9.5.0'
  allow-install:
    description: 'Allow the CI command to install the dependencies'
    required: false
    default: 'true'

runs:
  using: composite
  steps:
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}

    - name: Install PNPM
      uses: pnpm/action-setup@v3
      id: pnpm-install
      with:
        version: ${{ inputs.pnpm-version }}
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup PNPM cache
      uses: actions/cache@v4
      id: pnpm-cache
      with:
        path: ${{ env.STORE_PATH }}
        key: pnpm-store-${{ runner.os }}-node-${{ inputs.node-version }}-pnpm-${{ inputs.pnpm-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}

    - name: Setup NPM cache
      id: npm-cache
      uses: actions/cache@v4
      with:
        path: node_modules
        key: node-modules-${{ runner.os }}-node-${{ inputs.node-version }}-pnpm-${{ inputs.pnpm-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}

    - name: Install dependencies
      if: (steps.npm-cache.outputs.cache-hit != 'true' || steps.pnpm-cache.outputs.cache-hit != 'true') && inputs.allow-install == 'true'
      shell: bash
      run: |
        pnpm i --frozen-lockfile
